plugins {
  id 'java'
  id 'org.springframework.boot' version '3.3.4'
  id 'io.spring.dependency-management' version '1.1.6'
}

group = 'dev.ohhoonim.factory'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
  mavenCentral()
}

ext {
	set('springModulithVersion', "1.2.4")
}


dependencies {
  // spring-boot-starters
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-amqp'
  implementation 'org.springframework.modulith:spring-modulith-starter-core:1.2.4'
  implementation 'org.springframework.modulith:spring-modulith-starter-jpa:1.2.4'
  runtimeOnly 'org.springframework.modulith:spring-modulith-events-amqp'
  implementation 'org.springframework.modulith:spring-modulith-events-api'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'
  // modulith
  runtimeOnly 'org.springframework.modulith:spring-modulith-actuator'
  runtimeOnly 'org.springframework.modulith:spring-modulith-observability'
  // developer 
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
  // test
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.springframework.modulith:spring-modulith-starter-test:1.2.4'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testImplementation 'org.springframework.boot:spring-boot-testcontainers'
  testImplementation 'org.testcontainers:junit-jupiter'
  testImplementation 'org.testcontainers:postgresql'
  testImplementation 'org.springframework.amqp:spring-rabbit-test'
  // util
  implementation 'com.google.guava:guava:31.1-jre'
  // security
  implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
  implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
  runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
  // database
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
  runtimeOnly 'org.postgresql:postgresql'
  // lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testCompileOnly 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'
  // querydsl
  implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"
  // swagger
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.modulith:spring-modulith-bom:${springModulithVersion}"
	}
}

tasks.named('test') {
    useJUnitPlatform()
}

jar { enabled = true }